---
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
resources:
  - name: repo-prod
    type: git
    source:
      uri: git@github.com:maki-home/uaa.git
      branch: master
      private_key: {{github-private-key}}
  - name: repo-staging
    type: git
    source:
      uri: git@github.com:maki-home/uaa.git
      branch: release
      private_key: {{github-private-key}}
  - name: repo-dev
    type: git
    source:
      uri: git@github.com:maki-home/uaa.git
      branch: develop
      private_key: {{github-private-key}}
  - name: repo-version
    type: semver
    source:
      uri: git@github.com:maki-home/uaa-version.git
      branch: master
      private_key: {{github-private-key}}
      file: version
      driver: git
      initial_version: 0.5.0
  - name: utils
    type: git
    source:
      uri: https://github.com/maki-home/concourse-utils
      branch: master
  - name: gpg
    type: git
    source:
      uri: https://github.com/maki-home/encrypted-gpg
      branch: master
  - name: cf-prod
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: home
      skip_cert_check: true
  - name: cf-staging
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: home-staging
      skip_cert_check: true
  - name: cf-dev
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: home-dev
      skip_cert_check: true
  - name: mysql
    type: docker-image
    source:
      repository: mysql
      tag: '5.7'
  - name: m2
    type: docker-image
    source:
      repository: making/home-m2
  - name: dockerhub
    type: docker-image
    source:
      repository: making/maki-uaa-server
      username: {{docker-username}}
      password: {{docker-password}}
      email: {{docker-email}}
  - name: repo-pr
    type: pull-request
    source:
      repo: maki-home/uaa
      access_token: {{github-access-token}}
jobs:
  ############# Pull Request #############

  - name: unit-test-pr
    plan:
      - aggregate:
        - get: repo
          resource: repo-pr
          trigger: true
        - get: utils
        - get: m2
      - put: repo-pr
        params:
          pagh: repo-pr
          status: pending
      - task: unit
        file: utils/tasks/unit-test.yml
        on_success:
          put: repo-pr
          params:
            path: repo-pr
            status: success
        on_failure:
          put: repo-pr
          params:
            path: repo-pr
            status: failure
  ############# Dev #############
  - name: unit-test-h2-dev
    plan:
      - aggregate:
        - get: repo
          resource: repo-dev
          trigger: true
        - get: utils
        - get: m2
      - task: unit
        file: utils/tasks/unit-test.yml
  - name: unit-test-mysql-dev
    plan:
      - aggregate:
        - get: repo
          resource: repo-dev
          trigger: true
        - get: utils
        - get: m2
        - get: mysql
          params:
            save: true
      - task: unit
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: making/dcind-jdk
          inputs:
            - name: repo
            - name: utils
            - name: m2
            - name: mysql
          run:
            path: sh
            args:
            - -c
            - |
              set -e
              source /docker-lib.sh
              start_docker
              # This loading is not nesessary but enalbes caching by Concourse
              docker load -i mysql/image
              docker tag "$(cat mysql/image-id)" "$(cat mysql/repository):$(cat mysql/tag)"
              docker images

              docker-compose -f repo/uaa-server/docker-compose-for-test.yml up -d
              sh utils/scripts/add-repos-in-pom-xml.sh repo && \
              sh utils/scripts/mvn.sh test repo
              docker-compose -f repo/uaa-server/docker-compose-for-test.yml down
          params:
            _JAVA_OPTIONS: -Duser.timezone=Asia/Tokyo -Duser.language=ja -Duser.country=JP -Djava.security.egd=file:/dev/./urandom
            SPRING_DATASOURCE_USERNAME: uaa-user
            SPRING_DATASOURCE_PASSWORD: uaa-pass
            SPRING_DATASOURCE_URL: jdbc:mysql://localhost:13306/uaa?useSSL=false
            SPRING_JPA_DATABASE: mysql

  - name: deploy-to-nexus-dev
    plan:
      - aggregate:
        - get: repo
          resource: repo-dev
          trigger: true
          passed:
          - unit-test-h2-dev
          - unit-test-mysql-dev
        - get: utils
        - get: m2
      - task: deploy
        file: utils/tasks/deploy-to-nexus.yml
        params:
          NEXUS_USERNAME: {{nexus-username}}
          NEXUS_PASSWORD: {{nexus-password}}
  - name: deploy-to-central-dev
    plan:
      - aggregate:
        - get: repo
          resource: repo-dev
          trigger: true
          passed:
          - unit-test-h2-dev
          - unit-test-mysql-dev
        - get: utils
        - get: gpg
        - get: m2
      - task: deploy
        file: utils/tasks/deploy-to-central.yml
        params:
          SONATYPE_USERNAME: {{sonatype-username}}
          SONATYPE_PASSWORD: {{sonatype-password}}
          ENCRYPTION_PASSWORD: {{gpg-encryption-password}}
          GPG_DIR: .
          GPG_KEYNAME: {{gpg-keyname}}
          GPG_PASSPHRASE: {{gpg-passphrase}}
  - name: deploy-to-cf-dev
    plan:
      - aggregate:
        - get: repo
          resource: repo-dev
          trigger: true
          passed:
          - deploy-to-nexus-dev
        - get: repo-version
        - get: utils
      - task: download
        file: utils/tasks/download-snapshot.yml
        params:
          GROUP_ID: am.ik.home
          ARTIFACT_ID: uaa-server
      - put: cf-dev
        params:
          manifest: repo/uaa-server/manifest-pez-dev.yml
          path: output/app.jar
          current_app_name: home-uaa-dev
  - name: integration-test-dev
    plan:
      - aggregate:
        - get: repo
          resource: repo-dev
          trigger: true
          passed:
          - deploy-to-cf-dev
        - get: utils
        - get: m2
      - task: it
        file: utils/tasks/integration-test.yml
        params:
          API_BASE: https://home-uaa-dev.cfapps.pez.pivotal.io/uaa
  ############# Staging #############
  - name: unit-test-staging
    plan:
      - aggregate:
        - get: repo
          resource: repo-staging
          trigger: true
        - get: utils
        - get: m2
      - task: unit
        file: utils/tasks/unit-test.yml
  - name: deploy-to-nexus-staging
    plan:
      - aggregate:
        - get: repo
          resource: repo-staging
          trigger: true
          passed:
          - unit-test-staging
        - get: utils
        - get: m2
      - task: deploy
        file: utils/tasks/deploy-to-nexus.yml
        params:
          NEXUS_USERNAME: {{nexus-username}}
          NEXUS_PASSWORD: {{nexus-password}}
  - name: deploy-to-central-staging
    plan:
      - aggregate:
        - get: repo
          resource: repo-staging
          trigger: true
          passed:
          - unit-test-staging
        - get: utils
        - get: gpg
        - get: m2
      - task: deploy
        file: utils/tasks/deploy-to-central.yml
        params:
          SONATYPE_USERNAME: {{sonatype-username}}
          SONATYPE_PASSWORD: {{sonatype-password}}
          ENCRYPTION_PASSWORD: {{gpg-encryption-password}}
          GPG_DIR: .
          GPG_KEYNAME: {{gpg-keyname}}
          GPG_PASSPHRASE: {{gpg-passphrase}}
  - name: deploy-to-cf-staging
    plan:
      - aggregate:
        - get: repo
          resource: repo-staging
          trigger: true
          passed:
          - deploy-to-nexus-staging
        - get: repo-version
        - get: utils
      - task: download
        file: utils/tasks/download-snapshot.yml
        params:
          GROUP_ID: am.ik.home
          ARTIFACT_ID: uaa-server
      - put: cf-staging
        params:
          manifest: repo/uaa-server/manifest-pez-staging.yml
          path: output/app.jar
          current_app_name: home-uaa-staging
  - name: integration-test-staging
    plan:
      - aggregate:
        - get: repo
          resource: repo-staging
          trigger: true
          passed:
          - deploy-to-cf-staging
        - get: utils
        - get: m2
      - task: it
        file: utils/tasks/integration-test.yml
        params:
          API_BASE: https://home-uaa-staging.cfapps.pez.pivotal.io/uaa
  ############# Prod #############
  - name: merge-release-to-master
    public: true
    plan:
      - aggregate:
        - get: repo-other
          resource: repo-prod
        - get: repo-staging
          passed:
          - integration-test-staging
        - get: utils
      - task: merge-release-to-master
        file: utils/tasks/merge-release-to-other.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-prod
        params:
          repository: other-out
  - name: unit-test-prod
    plan:
      - aggregate:
        - get: repo
          resource: repo-prod
          trigger: true
          passed:
          - merge-release-to-master
        - get: utils
        - get: m2
      - task: unit
        file: utils/tasks/unit-test.yml
  - name: tag-master
    public: true
    plan:
      - aggregate:
        - get: repo-prod
          passed:
          - unit-test-prod
          trigger: true
        - get: repo-version
        - get: utils
        - get: m2
      - task: bump-to-release-version
        file: utils/tasks/bump-to-release-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-prod
        params:
          repository: master-out
          tag: repo-version/number
  - name: deploy-to-nexus-prod
    plan:
      - aggregate:
        - get: repo
          resource: repo-prod
          trigger: true
          passed:
          - tag-master
        - get: utils
        - get: m2
      - task: deploy
        file: utils/tasks/deploy-to-nexus.yml
        params:
          NEXUS_USERNAME: {{nexus-username}}
          NEXUS_PASSWORD: {{nexus-password}}
  - name: deploy-to-central-prod
    plan:
      - aggregate:
        - get: repo
          resource: repo-prod
          trigger: true
          passed:
          - tag-master
        - get: utils
        - get: gpg
        - get: m2
      - task: deploy
        file: utils/tasks/deploy-to-central.yml
        params:
          SONATYPE_USERNAME: {{sonatype-username}}
          SONATYPE_PASSWORD: {{sonatype-password}}
          ENCRYPTION_PASSWORD: {{gpg-encryption-password}}
          GPG_DIR: .
          GPG_KEYNAME: {{gpg-keyname}}
          GPG_PASSPHRASE: {{gpg-passphrase}}
  - name: deploy-to-cf-prod
    plan:
      - aggregate:
        - get: repo
          resource: repo-prod
          trigger: true
          passed:
          - deploy-to-nexus-prod
        - get: repo-version
        - get: utils
      - task: download
        file: utils/tasks/download-release.yml
        params:
          GROUP_ID: am.ik.home
          ARTIFACT_ID: uaa-server
      - put: cf-prod
        params:
          manifest: repo/uaa-server/manifest-pez.yml
          path: output/app.jar
          current_app_name: home-uaa
  - name: deploy-to-dockerhub-prod
    plan:
      - aggregate:
        - get: repo
          resource: repo-prod
          trigger: true
          passed:
          - deploy-to-nexus-prod
        - get: repo-version
        - get: utils
      - task: download
        file: utils/tasks/download-release.yml
        params:
          GROUP_ID: am.ik.home
          ARTIFACT_ID: uaa-server
      - put: dockerhub
        params:
          build: .
          dockerfile: repo/uaa-server/Dockerfile
          tag_as_latest: true
          tag: repo-version/number
  - name: bump-to-next-minor-version
    plan:
      - aggregate:
        - get: repo-staging
        - get: repo-prod
          passed:
          - deploy-to-cf-prod
          - deploy-to-dockerhub-prod
          trigger: true
        - get: repo-version
          params:
            bump: minor
        - get: utils
        - get: m2
      - task: bump-to-next-minor-version
        file: utils/tasks/bump-to-next-develop-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-staging
        params:
          repository: release-out
      - put: repo-version
        params:
          file: repo-version/number
  - name: merge-release-to-develop-for-minor
    plan:
      - aggregate:
        - get: repo-other
          resource: repo-dev
        - get: repo-staging
          passed:
          - bump-to-next-minor-version
          trigger: true
        - get: utils
      - task: merge-release-to-develop
        file: utils/tasks/merge-release-to-other.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-dev
        params:
          repository: other-out
  - name: bump-to-next-patch-version
    plan:
      - aggregate:
        - get: repo-staging
        - get: repo-prod
          passed:
          - tag-master
        - get: repo-version
          params:
            bump: patch
        - get: utils
        - get: m2
      - task: bump-to-next-develop-version
        file: utils/tasks/bump-to-next-develop-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-staging
        params:
          repository: release-out
      - put: repo-version
        params:
          file: repo-version/number
  - name: merge-release-to-develop-for-patch
    plan:
      - aggregate:
        - get: repo-other
          resource: repo-dev
        - get: repo-staging
          passed:
          - bump-to-next-patch-version
          trigger: true
        - get: utils
      - task: merge-release-to-develop
        file: utils/tasks/merge-release-to-other.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-dev
        params:
          repository: other-out
  - name: bump-to-next-major-version
    plan:
      - aggregate:
        - get: repo-staging
        - get: repo-prod
          passed:
          - deploy-to-cf-prod
          - deploy-to-dockerhub-prod
        - get: repo-version
          params:
            bump: major
        - get: utils
        - get: m2
      - task: bump-to-next-major-version
        file: utils/tasks/bump-to-next-develop-version.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-staging
        params:
          repository: release-out
      - put: repo-version
        params:
          file: repo-version/number
  - name: merge-release-to-develop-for-major
    plan:
      - aggregate:
        - get: repo-other
          resource: repo-dev
        - get: repo-staging
          passed:
          - bump-to-next-major-version
          trigger: true
        - get: utils
      - task: merge-release-to-develop
        file: utils/tasks/merge-release-to-other.yml
        params:
          GIT_EMAIL: {{git-email}}
          GIT_NAME: {{git-name}}
      - put: repo-dev
        params:
          repository: other-out