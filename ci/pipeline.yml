---
resources:
  - name: uaa-repo
    type: git
    source:
      uri: https://github.com/maki-home/uaa.git
      branch: master
  - name: utils
    type: git
    source:
      uri: https://github.com/maki-home/concourse-utils
      branch: master
  - name: cf
    type: cf
    source:
      api: {{cf-api}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-org}}
      space: {{cf-space}}
      skip_cert_check: true
  - name: m2
    type: docker-image
    source:
      repository: making/home-m2
  - name: dockerhub
    type: docker-image
    source:
      repository: making/maki-uaa-server
      username: {{docker-username}}
      password: {{docker-password}}
      email: {{docker-email}}
jobs:
  - name: uaa-unit-test-server
    plan:
      - aggregate:
        - get: uaa-repo
          trigger: true
        - get: utils
        - get: m2
      - task: unit
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: making/alpine-java-bash-git
          inputs:
            - name: uaa-repo
            - name: utils
            - name: m2
          run:
            path: sh
            args:
            - -c
            - |
              utils/scripts/add-repos-in-pom-xml.sh uaa-repo && \
              uaa-repo/ci/tasks/unit.sh uaa-repo/uaa-server
          params:
            _JAVA_OPTIONS: -Duser.timezone=Asia/Tokyo -Duser.language=ja -Duser.country=JP -Djava.security.egd=file:/dev/./urandom
  - name: uaa-unit-test-client
    plan:
      - aggregate:
        - get: uaa-repo
          trigger: true
        - get: utils
        - get: m2
      - task: unit
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: making/alpine-java-bash-git
          inputs:
            - name: uaa-repo
            - name: utils
            - name: m2
          run:
            path: sh
            args:
            - -c
            - |
              utils/scripts/add-repos-in-pom-xml.sh uaa-repo && \
              uaa-repo/ci/tasks/unit.sh uaa-repo/uaa-client
          params:
            _JAVA_OPTIONS: -Duser.timezone=Asia/Tokyo -Duser.language=ja -Duser.country=JP -Djava.security.egd=file:/dev/./urandom
  - name: uaa-deploy-to-nexus
    plan:
      - aggregate:
        - get: uaa-repo
          trigger: true
          passed:
          - uaa-unit-test-server
          - uaa-unit-test-client
        - get: utils
        - get: m2
      - task: deploy
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: making/alpine-java-bash-git
          inputs:
            - name: uaa-repo
            - name: utils
            - name: m2
          outputs:
            - name: output
          run:
            path: sh
            args:
            - -c
            - |
              utils/scripts/add-repos-in-pom-xml.sh uaa-repo && \
              utils/scripts/add-distribution-management-in-pom-xml.sh uaa-repo && \
              utils/scripts/generate-settings-xml.sh {{nexus-username}} {{nexus-password}} uaa-repo && \
              uaa-repo/ci/tasks/deploy.sh uaa-repo
  - name: uaa-deploy-to-cf
    plan:
      - aggregate:
        - get: uaa-repo
          trigger: true
          passed: [ uaa-deploy-to-nexus ]
        - get: utils
      - task: download
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: maven
          inputs:
            - name: uaa-repo
            - name: utils
          outputs:
            - name: output
          run:
            path: sh
            args:
            - -c
            - |
              utils/scripts/generate-download-artifact-xml.sh am.ik.home uaa-server 0.0.1-SNAPSHOT output && \
              mvn -f output/download-artifact.xml validate
      - put: cf
        params:
          manifest: uaa-repo/uaa-server/manifest-pez.yml
          path: output/app.jar
          current_app_name: home-uaa
  - name: uaa-deploy-to-dockerhub
    plan:
      - aggregate:
        - get: uaa-repo
          trigger: true
          passed: [ uaa-deploy-to-nexus ]
        - get: utils
      - task: download
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: maven
          inputs:
            - name: uaa-repo
            - name: utils
          outputs:
            - name: output
          run:
            path: sh
            args:
            - -c
            - |
              utils/scripts/generate-download-artifact-xml.sh am.ik.home uaa-server 0.0.1-SNAPSHOT output && \
              mvn -f output/download-artifact.xml validate
      - put: dockerhub
        params:
          build: .
          dockerfile: uaa-repo/uaa-server/Dockerfile
          tag_as_latest: true
